
package mealymachine;

import java.util.Arrays;
import javax.swing.JOptionPane;

/**
 *
 * @author Muazzez
 */
public class Main extends javax.swing.JFrame {

    private String[] stateStr, inputStr, outputStr, nextStateStr;
    private State[] stateList;
    
    public Main() {
        
        initComponents();
        resultPanel.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        stateTA = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        nextStateTA = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        inputTA = new javax.swing.JTextArea();
        machineReady = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        outputTA = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();
        resultPanel = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        resultOutputLB = new javax.swing.JLabel();
        inputStringTF = new javax.swing.JTextField();
        showResult = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        resultStateLB = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();

        jLabel4.setText("jLabel4");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("State : ");

        jLabel2.setText("Input : ");

        jLabel3.setText("Output : ");

        stateTA.setColumns(20);
        stateTA.setRows(5);
        jScrollPane1.setViewportView(stateTA);

        nextStateTA.setColumns(20);
        nextStateTA.setRows(5);
        jScrollPane2.setViewportView(nextStateTA);

        inputTA.setColumns(20);
        inputTA.setRows(5);
        jScrollPane3.setViewportView(inputTA);

        machineReady.setText("Ready");
        machineReady.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                machineReadyMouseClicked(evt);
            }
        });

        outputTA.setColumns(20);
        outputTA.setRows(5);
        jScrollPane4.setViewportView(outputTA);

        jLabel5.setText("Next State : ");

        resultPanel.setBackground(new java.awt.Color(204, 255, 204));

        jLabel6.setText("your input :");

        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("output :");

        resultOutputLB.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        showResult.setText("Show Result");
        showResult.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                showResultMouseClicked(evt);
            }
        });

        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("state list :");

        resultStateLB.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout resultPanelLayout = new javax.swing.GroupLayout(resultPanel);
        resultPanel.setLayout(resultPanelLayout);
        resultPanelLayout.setHorizontalGroup(
            resultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, resultPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(resultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(resultPanelLayout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(inputStringTF, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(resultPanelLayout.createSequentialGroup()
                        .addGroup(resultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel11)
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(resultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(resultStateLB, javax.swing.GroupLayout.DEFAULT_SIZE, 258, Short.MAX_VALUE)
                            .addComponent(resultOutputLB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(77, 77, 77)
                .addComponent(showResult, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        resultPanelLayout.setVerticalGroup(
            resultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, resultPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(resultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inputStringTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(showResult)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(resultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(resultStateLB, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(resultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(resultOutputLB, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(29, Short.MAX_VALUE))
        );

        jLabel10.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel10.setText("MEALY MACHINE");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(resultPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(5, 5, 5))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jScrollPane1)
                            .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jScrollPane3))
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane4)
                            .addComponent(jLabel3))
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5)
                            .addComponent(machineReady, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(30, 30, 30))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)))
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)
                        .addComponent(jScrollPane3)
                        .addComponent(jScrollPane4))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addComponent(machineReady)
                .addGap(30, 30, 30)
                .addComponent(resultPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(31, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    
    
    private boolean control(){
        
        if(inputTA.getLineCount() == outputTA.getLineCount() && outputTA.getLineCount() == nextStateTA.getLineCount()){
            // new controls can be added to the control function
            return true;
        }
        return false;
    }
        
    private void machineReadyMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_machineReadyMouseClicked
        // ready button
        
        if(control()){
            
            stateStr = stateTA.getText().split("\n");
            nextStateStr = nextStateTA.getText().split("\n");
            inputStr = inputTA.getText().split("\n");
            outputStr = outputTA.getText().split("\n");
            stateList = new State[stateStr.length];
            int len = 0;
            
            for(int s = 0; s < stateList.length; s++){
                
                stateList[s] = new State(stateStr[s], s);
                len = nextStateStr[s].toString().split(",").length; 
                
                if(stateList[s].isEmpty()){
                    stateList[s].setNextStateSize(len);
                }
                stateList[s].setIO(inputStr[s], outputStr[s]);
            }
            
            int x = 0;
            while(x < nextStateStr.length){
                
                len = nextStateStr[x].toString().split(",").length;
                State[] tempNextState = new State[len]; 
                String[] tempNext = new String[len];
                tempNext = nextStateStr[x].split(",");
                
                for(int s = 0; s < tempNext.length; s++){
                
                    for (int i = 0; i < stateList.length; i++) {
                        
                        if(tempNext[s].trim().equals(stateList[i].getName().trim()))
                            tempNextState[s] = stateList[i];
                    }
                }
                stateList[x].setNextState(tempNextState);
                //stateList[x].printState();
                x++;
            }
            resultPanel.setVisible(true);
        }
        else
            JOptionPane.showMessageDialog(null, "Machine Error");
    }//GEN-LAST:event_machineReadyMouseClicked

    
    private void showResultMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_showResultMouseClicked
        
        String istf[] = inputStringTF.getText().trim().split(",");
        String[] resultState = new String[istf.length];
        String[] resultOuput = new String[istf.length];

        int nextIndex = 0, control = -1;
        
        for(int i = 0; i < istf.length ; i++){
            
            control = -1;
            for(int r = 0; r < stateList[nextIndex].input.length; r++){
                
                try {
                    if(stateList[nextIndex].input[r].equals(istf[i])){
                        
                        resultOuput[i] = stateList[nextIndex].output[r];
                        nextIndex = stateList[nextIndex].nextState[r].index;
                        resultState[i] = stateList[nextIndex].getName();
                        control++;
                    }
                    
                } catch (Exception e) {
                    System.out.println(r+ " " +e);
                    JOptionPane.showMessageDialog(null, "Error");
                    break;
                }
                
            }
            if(control == -1){
                inputStringTF.setText("state name is wrong, try again");
                break;
            }
        }
        resultStateLB.setText(Arrays.toString(resultState));
        resultOutputLB.setText(Arrays.toString(resultOuput));
    }//GEN-LAST:event_showResultMouseClicked
    
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField inputStringTF;
    private javax.swing.JTextArea inputTA;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JButton machineReady;
    private javax.swing.JTextArea nextStateTA;
    private javax.swing.JTextArea outputTA;
    private javax.swing.JLabel resultOutputLB;
    private javax.swing.JPanel resultPanel;
    private javax.swing.JLabel resultStateLB;
    private javax.swing.JButton showResult;
    private javax.swing.JTextArea stateTA;
    // End of variables declaration//GEN-END:variables
}
